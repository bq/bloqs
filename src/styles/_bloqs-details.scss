/* BASIC THEME */

$code-color: #58B42D;
$classes-color: #9b0769;
$communication-color: #E30B9A;
$components-color: #cf1c22;
$control-color: #11489A;
$functions-color: #DD5A0A;
$logic-color: #7C0DD6;
$maths-color: #01C0C8;
$text-color: #0294CF;
$vars-color: #D9B032;
$zowi-color: #60BCC9;
$conversions-color: #00CC11;

/* COLOR THEME */

$theme-color-classes-color: #9b0769;
$theme-color-functions-color: #dd5b0c;
$theme-color-control-color: #114698;
$theme-color-code-color: #59b52e;
$theme-color-communication-color: #e10a98;
$theme-color-components-color: #ce1c23;
$theme-color-logic-color: #790cd7;
$theme-color-maths-color: #00c1c7;
$theme-color-text-color: #0094cf;
$theme-color-vars-color: #d8af31;
$theme-color-zowi-color: #60BCC9;
$theme-color-conversions-color: #00CC11;
@mixin createBloqsTheme ($reverse) {
    /*---- CONVERSIONS ---------*/
    @include createBloqsCss($reverse, "bloq-string-to-int", $conversions-color, $theme-color-conversions-color);
    /*---- ZOWI ---------*/
    @include createBloqsCss($reverse, "bloq-zowi-gestures", $zowi-color, $theme-color-zowi-color);
    @include createBloqsCss($reverse, "bloq-zowi-rest", $zowi-color, $theme-color-zowi-color);
    @include createBloqsCss($reverse, "bloq-zowi-movements", $zowi-color, $theme-color-zowi-color);
    @include createBloqsCss($reverse, "bloq-zowi-movements-simple", $zowi-color, $theme-color-zowi-color);
    @include createBloqsCss($reverse, "bloq-zowi-mouth", $zowi-color, $theme-color-zowi-color);
    @include createBloqsCss($reverse, "bloq-zowi-movements-height", $zowi-color, $theme-color-zowi-color);
    @include createBloqsCss($reverse, "bloq-zowi-movements-no-dir", $zowi-color, $theme-color-zowi-color);
    @include createBloqsCss($reverse, "bloq-zowi-sounds", $zowi-color, $theme-color-zowi-color);
    @include createBloqsCss($reverse, "bloq-zowi-sound", $zowi-color, $theme-color-zowi-color);
    @include createBloqsCss($reverse, "bloq-zowi-distance", $zowi-color, $theme-color-zowi-color);
    @include createBloqsCss($reverse, "bloq-zowi-buttons", $zowi-color, $theme-color-zowi-color);
    @include createBloqsCss($reverse, "bloq-zowi-if-buttons", $zowi-color, $theme-color-zowi-color, true);
    @include createBloqsCss($reverse, "bloq-zowi-if-sound", $zowi-color, $theme-color-zowi-color, true);
    @include createBloqsCss($reverse, "bloq-zowi-if-distance", $zowi-color, $theme-color-zowi-color, true);
    /*---- CLASSES ---------*/
    @include createBloqsCss($reverse, "bloq-array-class-variable", $classes-color, $theme-color-classes-color);
    @include createBloqsCss($reverse, "bloq-class", $classes-color, $theme-color-classes-color, true);
    @include createBloqsCss($reverse, "bloq-class-children", $classes-color, $theme-color-classes-color, true);
    @include createBloqsCss($reverse, "bloq-constructor", $classes-color, $theme-color-classes-color, true);
    @include createBloqsCss($reverse, "bloq-constructor-arguments", $classes-color, $theme-color-classes-color, true);
    @include createBloqsCss($reverse, "bloq-invoke-arguments-class", $classes-color, $theme-color-classes-color);
    @include createBloqsCss($reverse, "bloq-invoke-class", $classes-color, $theme-color-classes-color);
    @include createBloqsCss($reverse, "bloq-invoke-class-function", $classes-color, $theme-color-classes-color);
    @include createBloqsCss($reverse, "bloq-invoke-class-function-args", $classes-color, $theme-color-classes-color);
    @include createBloqsCss($reverse, "bloq-invoke-class-return-function", $classes-color, $theme-color-classes-color);
    @include createBloqsCss($reverse, "bloq-invoke-class-return-function", $classes-color, $theme-color-classes-color);
    @include createBloqsCss($reverse, "bloq-private", $classes-color, $theme-color-classes-color, true);
    @include createBloqsCss($reverse, "bloq-public", $classes-color, $theme-color-classes-color, true);
    @include createBloqsCss($reverse, "bloq-protected", $classes-color, $theme-color-classes-color, true);
    @include createBloqsCss($reverse, "bloq-select-class-variable", $classes-color, $theme-color-classes-color);
    @include createBloqsCss($reverse, "bloq-set-class-variableArray", $classes-color, $theme-color-classes-color);
    @include createBloqsCss($reverse, "bloq-set-class-variable", $classes-color, $theme-color-classes-color);
    /*---- FUNCTIONS ------*/
    @include createBloqsCss($reverse, "bloq-argument", $functions-color, $theme-color-functions-color);
    @include createBloqsCss($reverse, "bloq-arguments", $functions-color, $theme-color-functions-color);
    @include createBloqsCss($reverse, "bloq-invoke-return-function", $functions-color, $theme-color-functions-color);
    @include createBloqsCss($reverse, "bloq-return", $functions-color, $theme-color-functions-color);
    @include createBloqsCss($reverse, "bloq-return-function", $functions-color, $theme-color-functions-color, true);
    @include createBloqsCss($reverse, "bloq-return-function-with-arguments", $functions-color, $theme-color-functions-color, true);
    @include createBloqsCss($reverse, "bloq-invoke-return-function-with-arguments", $functions-color, $theme-color-functions-color, true);
    @include createBloqsCss($reverse, "bloq-void-function", $functions-color, $theme-color-functions-color, true);
    @include createBloqsCss($reverse, "bloq-void-function-with-arguments", $functions-color, $theme-color-functions-color, true);
    @include createBloqsCss($reverse, "bloq-invoke-function-with-arguments", $functions-color, $theme-color-functions-color, true);
    /*---- CONTROL ------*/
    @include createBloqsCss($reverse, "bloq-millis", $control-color, $theme-color-control-color);
    @include createBloqsCss($reverse, "bloq-break", $control-color, $theme-color-control-color);
    @include createBloqsCss($reverse, "bloq-case", $control-color, $theme-color-control-color, true);
    @include createBloqsCss($reverse, "bloq-case-default", $control-color, $theme-color-control-color, true);
    @include createBloqsCss($reverse, "bloq-continue", $control-color, $theme-color-control-color);
    @include createBloqsCss($reverse, "bloq-else", $control-color, $theme-color-control-color, true);
    @include createBloqsCss($reverse, "bloq-else-if", $control-color, $theme-color-control-color, true);
    @include createBloqsCss($reverse, "bloq-for", $control-color, $theme-color-control-color, true);
    @include createBloqsCss($reverse, "bloq-if", $control-color, $theme-color-control-color, true);
    @include createBloqsCss($reverse, "bloq-switch", $control-color, $theme-color-control-color, true);
    @include createBloqsCss($reverse, "bloq-wait", $control-color, $theme-color-control-color);
    @include createBloqsCss($reverse, "bloq-while", $control-color, $theme-color-control-color, true);
    /*---- CODE ------*/
    @include createBloqsCss($reverse, "bloq-code", $code-color, $theme-color-code-color);
    @include createBloqsCss($reverse, "bloq-comment", $code-color, $theme-color-code-color);
    /*---- COMMUNICATION ------*/
    @include createBloqsCss($reverse, "bloq-convert", $communication-color, $theme-color-communication-color);
    @include createBloqsCss($reverse, "bloq-serial-send", $communication-color, $theme-color-communication-color);
    /*---- COMPONENTS ------*/
    @include createBloqsCss($reverse, "bloq-hts221-humidity", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-hts221-temperature", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-rgbLed", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-rgbLed-simple", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-rgbLed-advanced", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-rgbLed-fade", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-rtc", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-rtc-advanced", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-rtc-init", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-rgbLed-fade", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-lcd-turn-on-off-advanced", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-hw-variable-advanced", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-buzzer-advance", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-continuous-servo-start-advanced", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-continuous-servo-stop-advanced", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-lcd-turn-on-on-advanced", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-lcd-writte-advanced", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-lcd-clear", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-led-advanced", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-oscillator-advanced", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-oscillator-start-advanced", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-oscillator-stop-advanced", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-pin-read-advanced", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-pin-writte-advanced", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-read-advanced", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-servo-advanced", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-turn-on-off-advanced", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-buzzer", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-continuous-servo-start", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-continuous-servo-stop", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-lcd-turn-on-off", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-lcd-writte", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-led", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-oscillator", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-oscillator-start", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-oscillator-stop", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-read-dropdown", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-servo", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-digital-read-advanced", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-analog-read-advanced", $components-color, $theme-color-components-color);
    /*---- LOGIC ------*/
    @include createBloqsCss($reverse, "bloq-boolean", $logic-color, $theme-color-logic-color);
    @include createBloqsCss($reverse, "bloq-equality-operations", $logic-color, $theme-color-logic-color);
    @include createBloqsCss($reverse, "bloq-logic-operations", $logic-color, $theme-color-logic-color);
    @include createBloqsCss($reverse, "bloq-boolArray", $logic-color, $theme-color-logic-color);
    @include createBloqsCss($reverse, "bloq-not", $logic-color, $theme-color-logic-color);
    /*---- TEXT ------*/
    @include createBloqsCss($reverse, "bloq-length", $text-color, $theme-color-text-color);
    @include createBloqsCss($reverse, "bloq-string", $text-color, $theme-color-text-color);
    @include createBloqsCss($reverse, "bloq-stringArray", $text-color, $theme-color-text-color);
    @include createBloqsCss($reverse, "bloq-string-create", $text-color, $theme-color-text-color);
    @include createBloqsCss($reverse, "bloq-stringArray-advanced", $text-color, $theme-color-text-color);
    @include createBloqsCss($reverse, "bloq-string-sum", $text-color, $theme-color-text-color);
    /*---- VARIABLES ------*/
    @include createBloqsCss($reverse, "bloq-array-variable", $vars-color, $theme-color-vars-color);
    @include createBloqsCss($reverse, "bloq-declare-variable", $vars-color, $theme-color-vars-color);
    @include createBloqsCss($reverse, "bloq-sw-variable-advanced", $vars-color, $theme-color-vars-color);
    @include createBloqsCss($reverse, "bloq-set-variableArray", $vars-color, $theme-color-vars-color);
    @include createBloqsCss($reverse, "bloq-set-variable", $vars-color, $theme-color-vars-color);
    /*---- OUTPUT BLOQ to avoid that a outputbloq take the extern bloq style------*/
    @include createBloqsCss($reverse, "bloq-number", $maths-color, $theme-color-maths-color);
    @include createBloqsCss($reverse, "bloq-string", $text-color, $theme-color-text-color);
    @include createBloqsCss($reverse, "bloq-read-sensor", $components-color, $theme-color-components-color);
    @include createBloqsCss($reverse, "bloq-serial-receiver", $communication-color, $theme-color-communication-color);
    /*---- MATHS ------*/
    @include createBloqsCss($reverse, "bloq-basic-operations", $maths-color, $theme-color-maths-color);
    @include createBloqsCss($reverse, "bloq-numberArray-advanced", $maths-color, $theme-color-maths-color);
    @include createBloqsCss($reverse, "bloq-map", $maths-color, $theme-color-maths-color);
    @include createBloqsCss($reverse, "bloq-numberArray", $maths-color, $theme-color-maths-color);
    @include createBloqsCss($reverse, "bloq-map-advanced", $maths-color, $theme-color-maths-color);
    @include createBloqsCss($reverse, "bloq-math-operations", $maths-color, $theme-color-maths-color);
    @include createBloqsCss($reverse, "bloq-random", $maths-color, $theme-color-maths-color);
    @include createBloqsCss($reverse, "bloq-random-seed", $maths-color, $theme-color-maths-color);
    @include createBloqsCss($reverse, "bloq-select-variable", $vars-color, $theme-color-vars-color);
    @include createBloqsCss($reverse, "bloq-invoke-function", $functions-color, $theme-color-functions-color);
    //@include createBloqsCss($reverse, "bloq-math-binary-operations", $functions-color, $theme-color-functions-color);
}

@mixin createBloqsCss($reverse, $className, $classColor, $themeColorClassColor, $statementInput:false) {
    @if ($reverse) {
        &.#{$className} {
            color: $classColor;
            input,
            textarea,
            select {
                color: $classColor;
            }
            @if($statementInput) {
                border-left: 5px solid $classColor;
                & > .bloq--extension:before {
                    border-left: 5px solid $classColor;
                }
            }
        }
    }
    @else {
        &.#{$className}:not(.disabled) {
            color: white;
            input,
            textarea,
            select,
            .bloqinput {
                color: white;
                background: $themeColorClassColor;
                background-color: rgba(0, 0, 0, 0.2);
                &:before {
                    background: $themeColorClassColor;
                    background-color: rgba(0, 0, 0, 0.2);
                }
            }
            ::-webkit-input-placeholder {
                color: white;
            }
            select {
                background-image: url($whiteDownArrow);
                background-repeat: no-repeat;
                background-position: right 7px bottom 45%;
                option {
                    color: black;
                }
            }
            &.bloq--statement {
                background-color: $themeColorClassColor;
            }
            &.bloq--output {
                background-color: $themeColorClassColor;
                &:before {
                    background-color: $themeColorClassColor;
                }
                &:focus:not(.disabled):after {
                    background-color: $themeColorClassColor;
                }
            }
            @if($statementInput) {
                // border-left: 5px solid $themeColorClassColor;
                & .bloqinput {
                    color: white;
                    background: $themeColorClassColor;
                    background-color: rgba(0, 0, 0, 0.2);
                    &:before {
                        background: $themeColorClassColor;
                        background-color: rgba(0, 0, 0, 0.2);
                    }
                }
                &:before {
                    background-color: $themeColorClassColor;
                }
                & > .bloq--statement-input__header {
                    background-color: $themeColorClassColor;
                }
                & > .bloq--extension {
                    &:before {
                        border-left: 5px solid $themeColorClassColor;
                    }
                    & > .bloq--extension--end {
                        background-color: $themeColorClassColor;
                    }
                }
                & > .bloq--extension:before {}
            }
        }
    }
}